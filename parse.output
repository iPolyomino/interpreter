Nonterminals useless in grammar

   variable_dcl


Terminals unused in grammar

   lex_AND
   lex_LBRACK
   lex_RBRACK


Rules useless in grammar

   48 variable_dcl: type lex_ID


State 85 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_dcl

    2 expression: expression2
    3           | expression lex_LT expression2
    4           | expression lex_GT expression2
    5           | expression lex_LE expression2
    6           | expression lex_GE expression2
    7           | expression lex_EQEQ expression2
    8           | expression lex_NE expression2

    9 expression2: expression3
   10            | lex_PLUS expression3
   11            | lex_MINUS expression3
   12            | expression2 lex_PLUS expression3
   13            | expression2 lex_MINUS expression3

   14 expression3: expression4
   15            | expression3 lex_STAR expression4
   16            | expression3 lex_SLASH expression4
   17            | expression3 lex_PERCENT expression4

   18 expression4: lex_INT
   19            | lex_CHAR
   20            | exp_variable
   21            | lex_LPAREN expression lex_RPAREN
   22            | exp_function

   23 exp_variable: lex_ID

   24 exp_function: lex_ID lex_LPAREN explist lex_RPAREN

   25 explist: %empty
   26        | expression
   27        | explist lex_COMMA expression

   28 statement: st_assign
   29          | lex_LBRACE st_list lex_RBRACE
   30          | st_if
   31          | st_while
   32          | st_return
   33          | st_function

   34 st_assign: exp_variable lex_EQ expression lex_SEMICOLON

   35 st_list: stlist

   36 stlist: %empty
   37       | stlist statement

   38 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement
   39      | lex_KW_IF lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE statement

   40 st_while: lex_KW_WHILE lex_LPAREN expression lex_RPAREN statement

   41 st_return: lex_KW_RETURN expression lex_SEMICOLON

   42 st_function: lex_ID lex_LPAREN explist lex_RPAREN lex_SEMICOLON

   43 type: lex_KW_INT
   44     | lex_KW_CHAR

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

   46 argument_dcllist: %empty

   47 variable_dcllist: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258) 43
lex_KW_CHAR (259) 44
lex_KW_IF (260) 38 39
lex_KW_ELSE (261) 39
lex_KW_WHILE (262) 40
lex_KW_RETURN (263) 41
lex_PLUS (264) 10 12
lex_MINUS (265) 11 13
lex_STAR (266) 15
lex_SLASH (267) 16
lex_PERCENT (268) 17
lex_AND (269)
lex_EQ (270) 34
lex_EQEQ (271) 7
lex_NE (272) 8
lex_LT (273) 3
lex_GT (274) 4
lex_LE (275) 5
lex_GE (276) 6
lex_COMMA (277) 27
lex_SEMICOLON (278) 34 41 42
lex_LPAREN (279) 21 24 38 39 40 42 45
lex_RPAREN (280) 21 24 38 39 40 42 45
lex_LBRACE (281) 29 45
lex_RBRACE (282) 29 45
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 18
lex_CHAR (286) 19
lex_ID (287) 23 24 42 45


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression (35)
    on left: 2 3 4 5 6 7 8, on right: 3 4 5 6 7 8 21 26 27 34 38 39
    40 41
expression2 (36)
    on left: 9 10 11 12 13, on right: 2 3 4 5 6 7 8 12 13
expression3 (37)
    on left: 14 15 16 17, on right: 9 10 11 12 13 15 16 17
expression4 (38)
    on left: 18 19 20 21 22, on right: 14 15 16 17
exp_variable (39)
    on left: 23, on right: 20 34
exp_function (40)
    on left: 24, on right: 22
explist (41)
    on left: 25 26 27, on right: 24 27 42
statement (42)
    on left: 28 29 30 31 32 33, on right: 37 38 39 40
st_assign (43)
    on left: 34, on right: 28
st_list (44)
    on left: 35, on right: 29 45
stlist (45)
    on left: 36 37, on right: 35 37
st_if (46)
    on left: 38 39, on right: 30
st_while (47)
    on left: 40, on right: 31
st_return (48)
    on left: 41, on right: 32
st_function (49)
    on left: 42, on right: 33
type (50)
    on left: 43 44, on right: 45
function_dcl (51)
    on left: 45, on right: 1
argument_dcllist (52)
    on left: 46, on right: 45
variable_dcllist (53)
    on left: 47, on right: 45


State 0

    0 $accept: . program $end

    lex_KW_INT   shift, and go to state 1
    lex_KW_CHAR  shift, and go to state 2

    program       go to state 3
    type          go to state 4
    function_dcl  go to state 5


State 1

   43 type: lex_KW_INT .

    $default  reduce using rule 43 (type)


State 2

   44 type: lex_KW_CHAR .

    $default  reduce using rule 44 (type)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 6


State 4

   45 function_dcl: type . lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_ID  shift, and go to state 7


State 5

    1 program: function_dcl .

    $default  reduce using rule 1 (program)


State 6

    0 $accept: program $end .

    $default  accept


State 7

   45 function_dcl: type lex_ID . lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_LPAREN  shift, and go to state 8


State 8

   45 function_dcl: type lex_ID lex_LPAREN . argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    $default  reduce using rule 46 (argument_dcllist)

    argument_dcllist  go to state 9


State 9

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist . lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_RPAREN  shift, and go to state 10


State 10

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN . lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_LBRACE  shift, and go to state 11


State 11

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE . variable_dcllist st_list lex_RBRACE

    $default  reduce using rule 47 (variable_dcllist)

    variable_dcllist  go to state 12


State 12

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist . st_list lex_RBRACE

    $default  reduce using rule 36 (stlist)

    st_list  go to state 13
    stlist   go to state 14


State 13

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list . lex_RBRACE

    lex_RBRACE  shift, and go to state 15


State 14

   35 st_list: stlist .
   37 stlist: stlist . statement

    lex_KW_IF      shift, and go to state 16
    lex_KW_WHILE   shift, and go to state 17
    lex_KW_RETURN  shift, and go to state 18
    lex_LBRACE     shift, and go to state 19
    lex_ID         shift, and go to state 20

    $default  reduce using rule 35 (st_list)

    exp_variable  go to state 21
    statement     go to state 22
    st_assign     go to state 23
    st_if         go to state 24
    st_while      go to state 25
    st_return     go to state 26
    st_function   go to state 27


State 15

   45 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE .

    $default  reduce using rule 45 (function_dcl)


State 16

   38 st_if: lex_KW_IF . lex_LPAREN expression lex_RPAREN statement
   39      | lex_KW_IF . lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE statement

    lex_LPAREN  shift, and go to state 28


State 17

   40 st_while: lex_KW_WHILE . lex_LPAREN expression lex_RPAREN statement

    lex_LPAREN  shift, and go to state 29


State 18

   41 st_return: lex_KW_RETURN . expression lex_SEMICOLON

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression    go to state 36
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 19

   29 statement: lex_LBRACE . st_list lex_RBRACE

    $default  reduce using rule 36 (stlist)

    st_list  go to state 42
    stlist   go to state 14


State 20

   23 exp_variable: lex_ID .
   42 st_function: lex_ID . lex_LPAREN explist lex_RPAREN lex_SEMICOLON

    lex_LPAREN  shift, and go to state 43

    $default  reduce using rule 23 (exp_variable)


State 21

   34 st_assign: exp_variable . lex_EQ expression lex_SEMICOLON

    lex_EQ  shift, and go to state 44


State 22

   37 stlist: stlist statement .

    $default  reduce using rule 37 (stlist)


State 23

   28 statement: st_assign .

    $default  reduce using rule 28 (statement)


State 24

   30 statement: st_if .

    $default  reduce using rule 30 (statement)


State 25

   31 statement: st_while .

    $default  reduce using rule 31 (statement)


State 26

   32 statement: st_return .

    $default  reduce using rule 32 (statement)


State 27

   33 statement: st_function .

    $default  reduce using rule 33 (statement)


State 28

   38 st_if: lex_KW_IF lex_LPAREN . expression lex_RPAREN statement
   39      | lex_KW_IF lex_LPAREN . expression lex_RPAREN statement lex_KW_ELSE statement

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression    go to state 45
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 29

   40 st_while: lex_KW_WHILE lex_LPAREN . expression lex_RPAREN statement

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression    go to state 46
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 30

   10 expression2: lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression3   go to state 47
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 31

   11 expression2: lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression3   go to state 48
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 32

   21 expression4: lex_LPAREN . expression lex_RPAREN

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression    go to state 49
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 33

   18 expression4: lex_INT .

    $default  reduce using rule 18 (expression4)


State 34

   19 expression4: lex_CHAR .

    $default  reduce using rule 19 (expression4)


State 35

   23 exp_variable: lex_ID .
   24 exp_function: lex_ID . lex_LPAREN explist lex_RPAREN

    lex_LPAREN  shift, and go to state 50

    $default  reduce using rule 23 (exp_variable)


State 36

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   41 st_return: lex_KW_RETURN expression . lex_SEMICOLON

    lex_EQEQ       shift, and go to state 51
    lex_NE         shift, and go to state 52
    lex_LT         shift, and go to state 53
    lex_GT         shift, and go to state 54
    lex_LE         shift, and go to state 55
    lex_GE         shift, and go to state 56
    lex_SEMICOLON  shift, and go to state 57


State 37

    2 expression: expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 2 (expression)


State 38

    9 expression2: expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 60
    lex_SLASH    shift, and go to state 61
    lex_PERCENT  shift, and go to state 62

    $default  reduce using rule 9 (expression2)


State 39

   14 expression3: expression4 .

    $default  reduce using rule 14 (expression3)


State 40

   20 expression4: exp_variable .

    $default  reduce using rule 20 (expression4)


State 41

   22 expression4: exp_function .

    $default  reduce using rule 22 (expression4)


State 42

   29 statement: lex_LBRACE st_list . lex_RBRACE

    lex_RBRACE  shift, and go to state 63


State 43

   42 st_function: lex_ID lex_LPAREN . explist lex_RPAREN lex_SEMICOLON

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    $default  reduce using rule 25 (explist)

    expression    go to state 64
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41
    explist       go to state 65


State 44

   34 st_assign: exp_variable lex_EQ . expression lex_SEMICOLON

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression    go to state 66
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 45

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   38 st_if: lex_KW_IF lex_LPAREN expression . lex_RPAREN statement
   39      | lex_KW_IF lex_LPAREN expression . lex_RPAREN statement lex_KW_ELSE statement

    lex_EQEQ    shift, and go to state 51
    lex_NE      shift, and go to state 52
    lex_LT      shift, and go to state 53
    lex_GT      shift, and go to state 54
    lex_LE      shift, and go to state 55
    lex_GE      shift, and go to state 56
    lex_RPAREN  shift, and go to state 67


State 46

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   40 st_while: lex_KW_WHILE lex_LPAREN expression . lex_RPAREN statement

    lex_EQEQ    shift, and go to state 51
    lex_NE      shift, and go to state 52
    lex_LT      shift, and go to state 53
    lex_GT      shift, and go to state 54
    lex_LE      shift, and go to state 55
    lex_GE      shift, and go to state 56
    lex_RPAREN  shift, and go to state 68


State 47

   10 expression2: lex_PLUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 60
    lex_SLASH    shift, and go to state 61
    lex_PERCENT  shift, and go to state 62

    $default  reduce using rule 10 (expression2)


State 48

   11 expression2: lex_MINUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 60
    lex_SLASH    shift, and go to state 61
    lex_PERCENT  shift, and go to state 62

    $default  reduce using rule 11 (expression2)


State 49

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   21 expression4: lex_LPAREN expression . lex_RPAREN

    lex_EQEQ    shift, and go to state 51
    lex_NE      shift, and go to state 52
    lex_LT      shift, and go to state 53
    lex_GT      shift, and go to state 54
    lex_LE      shift, and go to state 55
    lex_GE      shift, and go to state 56
    lex_RPAREN  shift, and go to state 69


State 50

   24 exp_function: lex_ID lex_LPAREN . explist lex_RPAREN

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    $default  reduce using rule 25 (explist)

    expression    go to state 64
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41
    explist       go to state 70


State 51

    7 expression: expression lex_EQEQ . expression2

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression2   go to state 71
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 52

    8 expression: expression lex_NE . expression2

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression2   go to state 72
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 53

    3 expression: expression lex_LT . expression2

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression2   go to state 73
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 54

    4 expression: expression lex_GT . expression2

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression2   go to state 74
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 55

    5 expression: expression lex_LE . expression2

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression2   go to state 75
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 56

    6 expression: expression lex_GE . expression2

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression2   go to state 76
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 57

   41 st_return: lex_KW_RETURN expression lex_SEMICOLON .

    $default  reduce using rule 41 (st_return)


State 58

   12 expression2: expression2 lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression3   go to state 77
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 59

   13 expression2: expression2 lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression3   go to state 78
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 60

   15 expression3: expression3 lex_STAR . expression4

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression4   go to state 79
    exp_variable  go to state 40
    exp_function  go to state 41


State 61

   16 expression3: expression3 lex_SLASH . expression4

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression4   go to state 80
    exp_variable  go to state 40
    exp_function  go to state 41


State 62

   17 expression3: expression3 lex_PERCENT . expression4

    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression4   go to state 81
    exp_variable  go to state 40
    exp_function  go to state 41


State 63

   29 statement: lex_LBRACE st_list lex_RBRACE .

    $default  reduce using rule 29 (statement)


State 64

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   26 explist: expression .

    lex_EQEQ  shift, and go to state 51
    lex_NE    shift, and go to state 52
    lex_LT    shift, and go to state 53
    lex_GT    shift, and go to state 54
    lex_LE    shift, and go to state 55
    lex_GE    shift, and go to state 56

    $default  reduce using rule 26 (explist)


State 65

   27 explist: explist . lex_COMMA expression
   42 st_function: lex_ID lex_LPAREN explist . lex_RPAREN lex_SEMICOLON

    lex_COMMA   shift, and go to state 82
    lex_RPAREN  shift, and go to state 83


State 66

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   34 st_assign: exp_variable lex_EQ expression . lex_SEMICOLON

    lex_EQEQ       shift, and go to state 51
    lex_NE         shift, and go to state 52
    lex_LT         shift, and go to state 53
    lex_GT         shift, and go to state 54
    lex_LE         shift, and go to state 55
    lex_GE         shift, and go to state 56
    lex_SEMICOLON  shift, and go to state 84


State 67

   38 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN . statement
   39      | lex_KW_IF lex_LPAREN expression lex_RPAREN . statement lex_KW_ELSE statement

    lex_KW_IF      shift, and go to state 16
    lex_KW_WHILE   shift, and go to state 17
    lex_KW_RETURN  shift, and go to state 18
    lex_LBRACE     shift, and go to state 19
    lex_ID         shift, and go to state 20

    exp_variable  go to state 21
    statement     go to state 85
    st_assign     go to state 23
    st_if         go to state 24
    st_while      go to state 25
    st_return     go to state 26
    st_function   go to state 27


State 68

   40 st_while: lex_KW_WHILE lex_LPAREN expression lex_RPAREN . statement

    lex_KW_IF      shift, and go to state 16
    lex_KW_WHILE   shift, and go to state 17
    lex_KW_RETURN  shift, and go to state 18
    lex_LBRACE     shift, and go to state 19
    lex_ID         shift, and go to state 20

    exp_variable  go to state 21
    statement     go to state 86
    st_assign     go to state 23
    st_if         go to state 24
    st_while      go to state 25
    st_return     go to state 26
    st_function   go to state 27


State 69

   21 expression4: lex_LPAREN expression lex_RPAREN .

    $default  reduce using rule 21 (expression4)


State 70

   24 exp_function: lex_ID lex_LPAREN explist . lex_RPAREN
   27 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 82
    lex_RPAREN  shift, and go to state 87


State 71

    7 expression: expression lex_EQEQ expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 7 (expression)


State 72

    8 expression: expression lex_NE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 8 (expression)


State 73

    3 expression: expression lex_LT expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 3 (expression)


State 74

    4 expression: expression lex_GT expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 4 (expression)


State 75

    5 expression: expression lex_LE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 5 (expression)


State 76

    6 expression: expression lex_GE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 58
    lex_MINUS  shift, and go to state 59

    $default  reduce using rule 6 (expression)


State 77

   12 expression2: expression2 lex_PLUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 60
    lex_SLASH    shift, and go to state 61
    lex_PERCENT  shift, and go to state 62

    $default  reduce using rule 12 (expression2)


State 78

   13 expression2: expression2 lex_MINUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 60
    lex_SLASH    shift, and go to state 61
    lex_PERCENT  shift, and go to state 62

    $default  reduce using rule 13 (expression2)


State 79

   15 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 15 (expression3)


State 80

   16 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 16 (expression3)


State 81

   17 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 17 (expression3)


State 82

   27 explist: explist lex_COMMA . expression

    lex_PLUS    shift, and go to state 30
    lex_MINUS   shift, and go to state 31
    lex_LPAREN  shift, and go to state 32
    lex_INT     shift, and go to state 33
    lex_CHAR    shift, and go to state 34
    lex_ID      shift, and go to state 35

    expression    go to state 88
    expression2   go to state 37
    expression3   go to state 38
    expression4   go to state 39
    exp_variable  go to state 40
    exp_function  go to state 41


State 83

   42 st_function: lex_ID lex_LPAREN explist lex_RPAREN . lex_SEMICOLON

    lex_SEMICOLON  shift, and go to state 89


State 84

   34 st_assign: exp_variable lex_EQ expression lex_SEMICOLON .

    $default  reduce using rule 34 (st_assign)


State 85

   38 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement .
   39      | lex_KW_IF lex_LPAREN expression lex_RPAREN statement . lex_KW_ELSE statement

    lex_KW_ELSE  shift, and go to state 90

    lex_KW_ELSE  [reduce using rule 38 (st_if)]
    $default     reduce using rule 38 (st_if)


State 86

   40 st_while: lex_KW_WHILE lex_LPAREN expression lex_RPAREN statement .

    $default  reduce using rule 40 (st_while)


State 87

   24 exp_function: lex_ID lex_LPAREN explist lex_RPAREN .

    $default  reduce using rule 24 (exp_function)


State 88

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   27 explist: explist lex_COMMA expression .

    lex_EQEQ  shift, and go to state 51
    lex_NE    shift, and go to state 52
    lex_LT    shift, and go to state 53
    lex_GT    shift, and go to state 54
    lex_LE    shift, and go to state 55
    lex_GE    shift, and go to state 56

    $default  reduce using rule 27 (explist)


State 89

   42 st_function: lex_ID lex_LPAREN explist lex_RPAREN lex_SEMICOLON .

    $default  reduce using rule 42 (st_function)


State 90

   39 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE . statement

    lex_KW_IF      shift, and go to state 16
    lex_KW_WHILE   shift, and go to state 17
    lex_KW_RETURN  shift, and go to state 18
    lex_LBRACE     shift, and go to state 19
    lex_ID         shift, and go to state 20

    exp_variable  go to state 21
    statement     go to state 91
    st_assign     go to state 23
    st_if         go to state 24
    st_while      go to state 25
    st_return     go to state 26
    st_function   go to state 27


State 91

   39 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE statement .

    $default  reduce using rule 39 (st_if)
