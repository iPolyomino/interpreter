Terminals unused in grammar

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_PLUS
   lex_MINUS
   lex_STAR
   lex_SLASH
   lex_PERCENT
   lex_AND
   lex_EQ
   lex_EQEQ
   lex_NE
   lex_LT
   lex_GT
   lex_LE
   lex_GE
   lex_COMMA
   lex_SEMICOLON
   lex_LPAREN
   lex_RPAREN
   lex_LBRACE
   lex_RBRACE
   lex_LBRACK
   lex_RBRACK
   lex_ID


Grammar

    0 $accept: program $end

    1 program: expression4

    2 expression4: lex_INT
    3            | lex_CHAR


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264)
lex_MINUS (265)
lex_STAR (266)
lex_SLASH (267)
lex_PERCENT (268)
lex_AND (269)
lex_EQ (270)
lex_EQEQ (271)
lex_NE (272)
lex_LT (273)
lex_GT (274)
lex_LE (275)
lex_GE (276)
lex_COMMA (277)
lex_SEMICOLON (278)
lex_LPAREN (279)
lex_RPAREN (280)
lex_LBRACE (281)
lex_RBRACE (282)
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 2
lex_CHAR (286) 3
lex_ID (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression4 (35)
    on left: 2 3, on right: 1


State 0

    0 $accept: . program $end

    lex_INT   shift, and go to state 1
    lex_CHAR  shift, and go to state 2

    program      go to state 3
    expression4  go to state 4


State 1

    2 expression4: lex_INT .

    $default  reduce using rule 2 (expression4)


State 2

    3 expression4: lex_CHAR .

    $default  reduce using rule 3 (expression4)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 5


State 4

    1 program: expression4 .

    $default  reduce using rule 1 (program)


State 5

    0 $accept: program $end .

    $default  accept
