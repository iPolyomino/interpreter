Terminals unused in grammar

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_AND
   lex_EQ
   lex_EQEQ
   lex_NE
   lex_LT
   lex_GT
   lex_LE
   lex_GE
   lex_COMMA
   lex_SEMICOLON
   lex_LPAREN
   lex_RPAREN
   lex_LBRACE
   lex_RBRACE
   lex_LBRACK
   lex_RBRACK


Grammar

    0 $accept: program $end

    1 program: expression2

    2 expression2: expression3
    3            | lex_PLUS expression3
    4            | lex_MINUS expression3
    5            | expression2 lex_PLUS expression3
    6            | expression2 lex_MINUS expression3

    7 expression3: expression4
    8            | expression3 lex_STAR expression4
    9            | expression3 lex_SLASH expression4
   10            | expression3 lex_PERCENT expression4

   11 expression4: lex_INT
   12            | lex_CHAR
   13            | exp_variable

   14 exp_variable: lex_ID


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264) 3 5
lex_MINUS (265) 4 6
lex_STAR (266) 8
lex_SLASH (267) 9
lex_PERCENT (268) 10
lex_AND (269)
lex_EQ (270)
lex_EQEQ (271)
lex_NE (272)
lex_LT (273)
lex_GT (274)
lex_LE (275)
lex_GE (276)
lex_COMMA (277)
lex_SEMICOLON (278)
lex_LPAREN (279)
lex_RPAREN (280)
lex_LBRACE (281)
lex_RBRACE (282)
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 11
lex_CHAR (286) 12
lex_ID (287) 14


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression2 (35)
    on left: 2 3 4 5 6, on right: 1 5 6
expression3 (36)
    on left: 7 8 9 10, on right: 2 3 4 5 6 8 9 10
expression4 (37)
    on left: 11 12 13, on right: 7 8 9 10
exp_variable (38)
    on left: 14, on right: 13


State 0

    0 $accept: . program $end

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    program       go to state 6
    expression2   go to state 7
    expression3   go to state 8
    expression4   go to state 9
    exp_variable  go to state 10


State 1

    3 expression2: lex_PLUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression3   go to state 11
    expression4   go to state 9
    exp_variable  go to state 10


State 2

    4 expression2: lex_MINUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression3   go to state 12
    expression4   go to state 9
    exp_variable  go to state 10


State 3

   11 expression4: lex_INT .

    $default  reduce using rule 11 (expression4)


State 4

   12 expression4: lex_CHAR .

    $default  reduce using rule 12 (expression4)


State 5

   14 exp_variable: lex_ID .

    $default  reduce using rule 14 (exp_variable)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 13


State 7

    1 program: expression2 .
    5 expression2: expression2 . lex_PLUS expression3
    6            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 14
    lex_MINUS  shift, and go to state 15

    $default  reduce using rule 1 (program)


State 8

    2 expression2: expression3 .
    8 expression3: expression3 . lex_STAR expression4
    9            | expression3 . lex_SLASH expression4
   10            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 16
    lex_SLASH    shift, and go to state 17
    lex_PERCENT  shift, and go to state 18

    $default  reduce using rule 2 (expression2)


State 9

    7 expression3: expression4 .

    $default  reduce using rule 7 (expression3)


State 10

   13 expression4: exp_variable .

    $default  reduce using rule 13 (expression4)


State 11

    3 expression2: lex_PLUS expression3 .
    8 expression3: expression3 . lex_STAR expression4
    9            | expression3 . lex_SLASH expression4
   10            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 16
    lex_SLASH    shift, and go to state 17
    lex_PERCENT  shift, and go to state 18

    $default  reduce using rule 3 (expression2)


State 12

    4 expression2: lex_MINUS expression3 .
    8 expression3: expression3 . lex_STAR expression4
    9            | expression3 . lex_SLASH expression4
   10            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 16
    lex_SLASH    shift, and go to state 17
    lex_PERCENT  shift, and go to state 18

    $default  reduce using rule 4 (expression2)


State 13

    0 $accept: program $end .

    $default  accept


State 14

    5 expression2: expression2 lex_PLUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression3   go to state 19
    expression4   go to state 9
    exp_variable  go to state 10


State 15

    6 expression2: expression2 lex_MINUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression3   go to state 20
    expression4   go to state 9
    exp_variable  go to state 10


State 16

    8 expression3: expression3 lex_STAR . expression4

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 21
    exp_variable  go to state 10


State 17

    9 expression3: expression3 lex_SLASH . expression4

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 22
    exp_variable  go to state 10


State 18

   10 expression3: expression3 lex_PERCENT . expression4

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 23
    exp_variable  go to state 10


State 19

    5 expression2: expression2 lex_PLUS expression3 .
    8 expression3: expression3 . lex_STAR expression4
    9            | expression3 . lex_SLASH expression4
   10            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 16
    lex_SLASH    shift, and go to state 17
    lex_PERCENT  shift, and go to state 18

    $default  reduce using rule 5 (expression2)


State 20

    6 expression2: expression2 lex_MINUS expression3 .
    8 expression3: expression3 . lex_STAR expression4
    9            | expression3 . lex_SLASH expression4
   10            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 16
    lex_SLASH    shift, and go to state 17
    lex_PERCENT  shift, and go to state 18

    $default  reduce using rule 6 (expression2)


State 21

    8 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 8 (expression3)


State 22

    9 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 9 (expression3)


State 23

   10 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 10 (expression3)
