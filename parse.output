Terminals unused in grammar

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_AND
   lex_LBRACK
   lex_RBRACK


Rules useless in parser due to conflicts

   37 st_while: %empty

   38 st_return: %empty

   39 st_function: %empty


State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statement

    2 expression: expression2
    3           | expression lex_LT expression2
    4           | expression lex_GT expression2
    5           | expression lex_LE expression2
    6           | expression lex_GE expression2
    7           | expression lex_EQEQ expression2
    8           | expression lex_NE expression2

    9 expression2: expression3
   10            | lex_PLUS expression3
   11            | lex_MINUS expression3
   12            | expression2 lex_PLUS expression3
   13            | expression2 lex_MINUS expression3

   14 expression3: expression4
   15            | expression3 lex_STAR expression4
   16            | expression3 lex_SLASH expression4
   17            | expression3 lex_PERCENT expression4

   18 expression4: lex_INT
   19            | lex_CHAR
   20            | exp_variable
   21            | lex_LPAREN expression lex_RPAREN
   22            | exp_function

   23 exp_variable: lex_ID

   24 exp_function: lex_ID lex_LPAREN explist lex_RPAREN

   25 explist: %empty
   26        | expression
   27        | explist lex_COMMA expression

   28 statement: st_assign
   29          | lex_LBRACE st_list lex_RBRACE
   30          | st_if
   31          | st_while
   32          | st_return
   33          | st_function

   34 st_assign: exp_variable lex_EQ expression lex_SEMICOLON

   35 st_list: %empty

   36 st_if: %empty

   37 st_while: %empty

   38 st_return: %empty

   39 st_function: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264) 10 12
lex_MINUS (265) 11 13
lex_STAR (266) 15
lex_SLASH (267) 16
lex_PERCENT (268) 17
lex_AND (269)
lex_EQ (270) 34
lex_EQEQ (271) 7
lex_NE (272) 8
lex_LT (273) 3
lex_GT (274) 4
lex_LE (275) 5
lex_GE (276) 6
lex_COMMA (277) 27
lex_SEMICOLON (278) 34
lex_LPAREN (279) 21 24
lex_RPAREN (280) 21 24
lex_LBRACE (281) 29
lex_RBRACE (282) 29
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 18
lex_CHAR (286) 19
lex_ID (287) 23 24


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression (35)
    on left: 2 3 4 5 6 7 8, on right: 3 4 5 6 7 8 21 26 27 34
expression2 (36)
    on left: 9 10 11 12 13, on right: 2 3 4 5 6 7 8 12 13
expression3 (37)
    on left: 14 15 16 17, on right: 9 10 11 12 13 15 16 17
expression4 (38)
    on left: 18 19 20 21 22, on right: 14 15 16 17
exp_variable (39)
    on left: 23, on right: 20 34
exp_function (40)
    on left: 24, on right: 22
explist (41)
    on left: 25 26 27, on right: 24 27
statement (42)
    on left: 28 29 30 31 32 33, on right: 1
st_assign (43)
    on left: 34, on right: 28
st_list (44)
    on left: 35, on right: 29
st_if (45)
    on left: 36, on right: 30
st_while (46)
    on left: 37, on right: 31
st_return (47)
    on left: 38, on right: 32
st_function (48)
    on left: 39, on right: 33


State 0

    0 $accept: . program $end

    lex_LBRACE  shift, and go to state 1
    lex_ID      shift, and go to state 2

    $end      reduce using rule 36 (st_if)
    $end      [reduce using rule 37 (st_while)]
    $end      [reduce using rule 38 (st_return)]
    $end      [reduce using rule 39 (st_function)]
    $default  reduce using rule 36 (st_if)

    program       go to state 3
    exp_variable  go to state 4
    statement     go to state 5
    st_assign     go to state 6
    st_if         go to state 7
    st_while      go to state 8
    st_return     go to state 9
    st_function   go to state 10


State 1

   29 statement: lex_LBRACE . st_list lex_RBRACE

    $default  reduce using rule 35 (st_list)

    st_list  go to state 11


State 2

   23 exp_variable: lex_ID .

    $default  reduce using rule 23 (exp_variable)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 12


State 4

   34 st_assign: exp_variable . lex_EQ expression lex_SEMICOLON

    lex_EQ  shift, and go to state 13


State 5

    1 program: statement .

    $default  reduce using rule 1 (program)


State 6

   28 statement: st_assign .

    $default  reduce using rule 28 (statement)


State 7

   30 statement: st_if .

    $default  reduce using rule 30 (statement)


State 8

   31 statement: st_while .

    $default  reduce using rule 31 (statement)


State 9

   32 statement: st_return .

    $default  reduce using rule 32 (statement)


State 10

   33 statement: st_function .

    $default  reduce using rule 33 (statement)


State 11

   29 statement: lex_LBRACE st_list . lex_RBRACE

    lex_RBRACE  shift, and go to state 14


State 12

    0 $accept: program $end .

    $default  accept


State 13

   34 st_assign: exp_variable lex_EQ . expression lex_SEMICOLON

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression    go to state 21
    expression2   go to state 22
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 14

   29 statement: lex_LBRACE st_list lex_RBRACE .

    $default  reduce using rule 29 (statement)


State 15

   10 expression2: lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression3   go to state 27
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 16

   11 expression2: lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression3   go to state 28
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 17

   21 expression4: lex_LPAREN . expression lex_RPAREN

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression    go to state 29
    expression2   go to state 22
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 18

   18 expression4: lex_INT .

    $default  reduce using rule 18 (expression4)


State 19

   19 expression4: lex_CHAR .

    $default  reduce using rule 19 (expression4)


State 20

   23 exp_variable: lex_ID .
   24 exp_function: lex_ID . lex_LPAREN explist lex_RPAREN

    lex_LPAREN  shift, and go to state 30

    $default  reduce using rule 23 (exp_variable)


State 21

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   34 st_assign: exp_variable lex_EQ expression . lex_SEMICOLON

    lex_EQEQ       shift, and go to state 31
    lex_NE         shift, and go to state 32
    lex_LT         shift, and go to state 33
    lex_GT         shift, and go to state 34
    lex_LE         shift, and go to state 35
    lex_GE         shift, and go to state 36
    lex_SEMICOLON  shift, and go to state 37


State 22

    2 expression: expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 2 (expression)


State 23

    9 expression2: expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 40
    lex_SLASH    shift, and go to state 41
    lex_PERCENT  shift, and go to state 42

    $default  reduce using rule 9 (expression2)


State 24

   14 expression3: expression4 .

    $default  reduce using rule 14 (expression3)


State 25

   20 expression4: exp_variable .

    $default  reduce using rule 20 (expression4)


State 26

   22 expression4: exp_function .

    $default  reduce using rule 22 (expression4)


State 27

   10 expression2: lex_PLUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 40
    lex_SLASH    shift, and go to state 41
    lex_PERCENT  shift, and go to state 42

    $default  reduce using rule 10 (expression2)


State 28

   11 expression2: lex_MINUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 40
    lex_SLASH    shift, and go to state 41
    lex_PERCENT  shift, and go to state 42

    $default  reduce using rule 11 (expression2)


State 29

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   21 expression4: lex_LPAREN expression . lex_RPAREN

    lex_EQEQ    shift, and go to state 31
    lex_NE      shift, and go to state 32
    lex_LT      shift, and go to state 33
    lex_GT      shift, and go to state 34
    lex_LE      shift, and go to state 35
    lex_GE      shift, and go to state 36
    lex_RPAREN  shift, and go to state 43


State 30

   24 exp_function: lex_ID lex_LPAREN . explist lex_RPAREN

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    $default  reduce using rule 25 (explist)

    expression    go to state 44
    expression2   go to state 22
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26
    explist       go to state 45


State 31

    7 expression: expression lex_EQEQ . expression2

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression2   go to state 46
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 32

    8 expression: expression lex_NE . expression2

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression2   go to state 47
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 33

    3 expression: expression lex_LT . expression2

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression2   go to state 48
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 34

    4 expression: expression lex_GT . expression2

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression2   go to state 49
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 35

    5 expression: expression lex_LE . expression2

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression2   go to state 50
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 36

    6 expression: expression lex_GE . expression2

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression2   go to state 51
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 37

   34 st_assign: exp_variable lex_EQ expression lex_SEMICOLON .

    $default  reduce using rule 34 (st_assign)


State 38

   12 expression2: expression2 lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression3   go to state 52
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 39

   13 expression2: expression2 lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression3   go to state 53
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 40

   15 expression3: expression3 lex_STAR . expression4

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression4   go to state 54
    exp_variable  go to state 25
    exp_function  go to state 26


State 41

   16 expression3: expression3 lex_SLASH . expression4

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression4   go to state 55
    exp_variable  go to state 25
    exp_function  go to state 26


State 42

   17 expression3: expression3 lex_PERCENT . expression4

    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression4   go to state 56
    exp_variable  go to state 25
    exp_function  go to state 26


State 43

   21 expression4: lex_LPAREN expression lex_RPAREN .

    $default  reduce using rule 21 (expression4)


State 44

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   26 explist: expression .

    lex_EQEQ  shift, and go to state 31
    lex_NE    shift, and go to state 32
    lex_LT    shift, and go to state 33
    lex_GT    shift, and go to state 34
    lex_LE    shift, and go to state 35
    lex_GE    shift, and go to state 36

    $default  reduce using rule 26 (explist)


State 45

   24 exp_function: lex_ID lex_LPAREN explist . lex_RPAREN
   27 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 57
    lex_RPAREN  shift, and go to state 58


State 46

    7 expression: expression lex_EQEQ expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 7 (expression)


State 47

    8 expression: expression lex_NE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 8 (expression)


State 48

    3 expression: expression lex_LT expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 3 (expression)


State 49

    4 expression: expression lex_GT expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 4 (expression)


State 50

    5 expression: expression lex_LE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 5 (expression)


State 51

    6 expression: expression lex_GE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 38
    lex_MINUS  shift, and go to state 39

    $default  reduce using rule 6 (expression)


State 52

   12 expression2: expression2 lex_PLUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 40
    lex_SLASH    shift, and go to state 41
    lex_PERCENT  shift, and go to state 42

    $default  reduce using rule 12 (expression2)


State 53

   13 expression2: expression2 lex_MINUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 40
    lex_SLASH    shift, and go to state 41
    lex_PERCENT  shift, and go to state 42

    $default  reduce using rule 13 (expression2)


State 54

   15 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 15 (expression3)


State 55

   16 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 16 (expression3)


State 56

   17 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 17 (expression3)


State 57

   27 explist: explist lex_COMMA . expression

    lex_PLUS    shift, and go to state 15
    lex_MINUS   shift, and go to state 16
    lex_LPAREN  shift, and go to state 17
    lex_INT     shift, and go to state 18
    lex_CHAR    shift, and go to state 19
    lex_ID      shift, and go to state 20

    expression    go to state 59
    expression2   go to state 22
    expression3   go to state 23
    expression4   go to state 24
    exp_variable  go to state 25
    exp_function  go to state 26


State 58

   24 exp_function: lex_ID lex_LPAREN explist lex_RPAREN .

    $default  reduce using rule 24 (exp_function)


State 59

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   27 explist: explist lex_COMMA expression .

    lex_EQEQ  shift, and go to state 31
    lex_NE    shift, and go to state 32
    lex_LT    shift, and go to state 33
    lex_GT    shift, and go to state 34
    lex_LE    shift, and go to state 35
    lex_GE    shift, and go to state 36

    $default  reduce using rule 27 (explist)
